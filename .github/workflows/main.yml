name: Deploy to VPS on push

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: SSH and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        script: |
          # If repo folder doesn't exist, clone it
          if [ ! -d "/home/root/emoease/PsychologySupport" ]; then
            git clone https://github.com/ShouraiNoPurogurama/psychology-support-microservices.git /home/root/emoease
          fi

          cd /home/root/emoease/PsychologySupport

          # Discard any local changes (optional, but safe)
          git reset --hard HEAD

          # Pull latest changes
          git pull origin main

          # Inject appsettings.json from GitHub secrets
          echo "${{ secrets.APPSETTINGS_AUTH }}" > Services/Auth/Auth.API/appsettings.json
          echo "${{ secrets.APPSETTINGS_CHATBOX }}" > Services/ChatBox/ChatBox.API/appsettings.json
          echo "${{ secrets.APPSETTINGS_IMAGE }}" > Services/Image/Image.API/appsettings.json
          echo "${{ secrets.APPSETTINGS_LIFESTYLES }}" > Services/LifeStyles/LifeStyles.API/appsettings.json
          echo "${{ secrets.APPSETTINGS_NOTIFICATION }}" > Services/Notification/Notification.API/appsettings.json
          echo "${{ secrets.APPSETTINGS_PAYMENT }}" > Services/Payment/Payment.API/appsettings.json
          echo "${{ secrets.APPSETTINGS_PROFILE }}" > Services/Profile/Profile.API/appsettings.json
          echo "${{ secrets.APPSETTINGS_PROMOTION }}" > Services/Promotion/Promotion.Grpc/appsettings.json
          echo "${{ secrets.APPSETTINGS_SCHEDULING }}" > Services/Scheduling/Scheduling.API/appsettings.json
          echo "${{ secrets.APPSETTINGS_SUBSCRIPTION }}" > Services/Subscription/Subscription.API/appsettings.json
          echo "${{ secrets.APPSETTINGS_TEST }}" > Services/Test/Test.API/appsettings.json


          # Deploy APIs
          docker compose -f docker-compose-apis.yml up -d --build
